<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="15" ignored="4" total="71" passed="52">
  <reporter-output>
  </reporter-output>
  <suite name="接口测试" duration-ms="16723" started-at="2022-04-10T17:27:14 CST" finished-at="2022-04-10T17:27:31 CST">
    <groups>
    </groups>
    <test name="test" duration-ms="16723" started-at="2022-04-10T17:27:14 CST" finished-at="2022-04-10T17:27:31 CST">
      <class name="com.lemon_yy.testcases.RechargeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="setup" is-config="true" duration-ms="0" started-at="2022-04-10T17:27:28 CST" finished-at="2022-04-10T17:27:28 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=1, interfaceName='recharge', title='正常充值-金额0.01', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": 0.01,
"timestamp":{{timestamp}},
"sign":{{sign}}
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.leave_amount": 0.01
}', checkSQL='{"select leave_amount from member where id={{member_id2}};":0.01,
"select count(*) from financelog where income_member_id={{member_id2}};":1}'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=2, interfaceName='recharge', title='正常充值-金额500000', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": 500000.00
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.leave_amount": 500000.01
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=5, interfaceName='recharge', title='充值金额为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}}
}', expected='{
  "code": 0,
  "msg": "余额必须为数值型"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=6, interfaceName='recharge', title='充值金额输入0', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": 0.00
}', expected='{
  "code": 2,
  "msg": "充值金额必须大于0且小于等于500000"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=3, interfaceName='recharge', title='用户id为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "amount": 10000.00
}', expected='{
  "code": 1,
  "msg": "用户id为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=4, interfaceName='recharge', title='用户id不存在', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": 888,
  "amount": 10000.00
}', expected='{
  "code": 1007,
  "msg": "无权限访问，请检查参数"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=8, interfaceName='recharge', title='充值金额输入超出50w', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": 500000.01
}', expected='{
  "code": 2,
  "msg": "余额必须大于0并且小于或者等于500000"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=7, interfaceName='recharge', title='充值金额输入负数', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": -100.00
}', expected='{
  "code": 2,
  "msg": "余额必须大于0并且小于或者等于500000"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=11, interfaceName='recharge', title='token错误', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer XXXXXXXXX"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": 10000.00
}', expected='{
  "code": 1003,
  "msg": "无法解析的JSON值，请检查token或Authorization请求头"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=9, interfaceName='recharge', title='充值金额输入小数位超过2位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": "10000.666"
}', expected='{
  "code": 2,
  "msg": "余额小数超过两位"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="16" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=12, interfaceName='recharge', title='请求头缺少Authorization', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": 10000.00
}', expected='{
  "code": 1003,
  "msg": "未授权或token已过期"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
        <test-method status="FAIL" signature="testGetRechage(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RechargeTest@64df9a61]" name="testGetRechage" duration-ms="0" started-at="2022-04-10T17:27:28 CST" data-provider="getRechageDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=10, interfaceName='recharge', title='充值金额输入非数字', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer {{token2}}"}', method='POST', url='/member/recharge', inputParams='{
  "member_id": {{member_id2}},
  "amount": "￥10000"
}', expected='{
  "code": 2,
  "msg": "余额必须为数值型"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.lemon_yy.testcases.RechargeTest.testGetRechage(RechargeTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRechage -->
      </class> <!-- com.lemon_yy.testcases.RechargeTest -->
      <class name="com.lemon_yy.testcases.LoginTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="setup" is-config="true" duration-ms="14" started-at="2022-04-10T17:27:26 CST" finished-at="2022-04-10T17:27:26 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="212" started-at="2022-04-10T17:27:26 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:26 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=1, interfaceName='login', title='正常登录-管理员', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "13315435717",
  "pwd": "lemon123456"
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.mobile_phone": "13315435717"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="218" started-at="2022-04-10T17:27:26 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:26 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=2, interfaceName='login', title='正常登录-投资人', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "13306385780",
  "pwd": "lemon666"
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.mobile_phone": "13306385780"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="201" started-at="2022-04-10T17:27:26 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:26 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=3, interfaceName='login', title='正常登录-借款人', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "13305886501",
  "pwd": "lemon12345678901"
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.mobile_phone": "13305886501"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="106" started-at="2022-04-10T17:27:26 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:26 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=4, interfaceName='login', title='手机号为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "",
  "pwd": "lemon666"
}', expected='{
  "code": 1,
  "msg": "手机号码为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="116" started-at="2022-04-10T17:27:26 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=5, interfaceName='login', title='手机号为10位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "1581554176",
  "pwd": "lemon666",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="116" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=6, interfaceName='login', title='手机号为12位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "158155417643",
  "pwd": "lemon666"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="104" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=7, interfaceName='login', title='手机号包含非数字', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "1581554176a",
  "pwd": "lemon666"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="127" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=8, interfaceName='login', title='不存在的号段', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "11015541764",
  "pwd": "lemon666"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="189" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=9, interfaceName='login', title='输入未注册的手机号', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "13323231200",
  "pwd": "lemon666"
}', expected='{
  "code": 1001,
  "msg": "账号信息错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="112" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=10, interfaceName='login', title='密码为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "15815541764",
  "pwd": ""
}', expected='{
  "code": 1,
  "msg": "密码为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="98" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=11, interfaceName='login', title='密码为7位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "1515815541764",
  "pwd": "lemon66"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="231" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=12, interfaceName='login', title='密码为17位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "15815541764",
  "pwd": "lemon123456789012"
}', expected='{
  "code": 1001,
  "msg": "账号信息错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="200" started-at="2022-04-10T17:27:27 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=13, interfaceName='login', title='密码错误-不区分大小写', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "15815541764",
  "pwd": "LEMON666"
}', expected='{
  "code": 1001,
  "msg": "账号信息错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="185" started-at="2022-04-10T17:27:28 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=14, interfaceName='login', title='密码错误-过长', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "15815541763",
  "pwd": "lemon1234567"
}', expected='{
  "code": 1001,
  "msg": "账号信息错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.LoginTest@51850751]" name="testLogin" duration-ms="217" started-at="2022-04-10T17:27:28 CST" data-provider="getLoginDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=15, interfaceName='login', title='密码错误-过短', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/login', inputParams='{
  "mobile_phone": "15815541763",
  "pwd": "lemon12345"
}', expected='{
  "code": 1001,
  "msg": "账号信息错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
      </class> <!-- com.lemon_yy.testcases.LoginTest -->
      <class name="com.lemon_yy.testcases.RegisterTest">
        <test-method status="PASS" signature="globalSetup()[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="globalSetup" is-config="true" duration-ms="670" started-at="2022-04-10T17:27:15 CST" finished-at="2022-04-10T17:27:15 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="setup" is-config="true" duration-ms="370" started-at="2022-04-10T17:27:15 CST" finished-at="2022-04-10T17:27:16 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="3604" started-at="2022-04-10T17:27:16 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:19 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=1, interfaceName='register', title='正常注册-管理员，昵称10位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "13315435717",
  "pwd": "lemon123456",
  "type":"0",
  "reg_name":"管理员用户lemon"
}', expected='{
  "code": 0,
  "msg": "OK",
  "data.mobile_phone": "13315435717"
}', checkSQL='{"select count(*) from member where mobile_phone=13315435717":1,
"select reg_name from member where mobile_phone=13315435717":"管理员用户lemon"}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="3892" started-at="2022-04-10T17:27:19 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:23 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=2, interfaceName='register', title='正常注册-普通用户，type为空，密码8位（投资人）', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "13306385780",
  "pwd": "lemon666",
  "type":"",
  "reg_name":"tudou"
}', expected='{
  "code": 0,
  "msg": "OK",
  "data.mobile_phone": "13306385780"
}', checkSQL='{"select count(*) from member where mobile_phone=13306385780":1}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="1131" started-at="2022-04-10T17:27:23 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:24 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=3, interfaceName='register', title='正常注册-普通用户，昵称为空，密码16位（借款人）', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "13305886501",
  "pwd": "lemon12345678901",
  "type":"1",
  "reg_name":""
}', expected='{
  "code": 0,
  "msg": "OK",
  "data.mobile_phone": "13305886501"
}', checkSQL='{"select count(*) from member where mobile_phone=13305886501":1}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="120" started-at="2022-04-10T17:27:24 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:24 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=4, interfaceName='register', title='手机号为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 1,
  "msg": "手机号为空",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="116" started-at="2022-04-10T17:27:24 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:24 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=5, interfaceName='register', title='手机号为10位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "1581554176",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="122" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=6, interfaceName='register', title='手机号为12位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "158155417633",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="110" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=7, interfaceName='register', title='手机号包含非数字', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "1581554176a",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="120" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=8, interfaceName='register', title='手机号为不存在的号段', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "11015541763",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "无效的手机格式",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="201" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=9, interfaceName='register', title='手机号输入已注册号码', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "15815541764",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "账号已存在",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="114" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=10, interfaceName='register', title='密码为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "15815541766",
  "pwd": "",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 1,
  "msg": "密码为空",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="115" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=11, interfaceName='register', title='密码为7位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "15815541766",
  "pwd": "lemon66",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "密码格式为8到16位",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="123" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:25 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=12, interfaceName='register', title='密码为17位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "15815541766",
  "pwd": "lemon123456789012",
  "type":"1",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "密码格式为8到16位",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="100" started-at="2022-04-10T17:27:25 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:26 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=13, interfaceName='register', title='type输入非0、1', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "15815541766",
  "pwd": "lemon123456",
  "type":"3",
  "reg_name":"mengmeng"
}', expected='{
  "code": 2,
  "msg": "不支持的用户类型",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.RegisterTest@38f57b3d]" name="testRegister" duration-ms="83" started-at="2022-04-10T17:27:26 CST" data-provider="getRegisterDatas" finished-at="2022-04-10T17:27:26 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=14, interfaceName='register', title='昵称超出10位', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json"}', method='POST', url='/member/register', inputParams='{
  "mobile_phone": "15815541766",
  "pwd": "lemon123456",
  "type":"1",
  "reg_name":"小柠檬mengmeng"
}', expected='{
  "code": 2,
  "msg": "用户昵称长度超过10位",
  "data": null
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
      </class> <!-- com.lemon_yy.testcases.RegisterTest -->
      <class name="com.lemon_yy.testcases.GetUserInfoTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon_yy.testcases.GetUserInfoTest@3ce3db41]" name="setup" is-config="true" duration-ms="0" started-at="2022-04-10T17:27:28 CST" finished-at="2022-04-10T17:27:28 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGetUserInfo(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.GetUserInfoTest@3ce3db41]" name="testGetUserInfo" duration-ms="132" started-at="2022-04-10T17:27:28 CST" data-provider="getUserInfoDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=1, interfaceName='getUserInfo', title='正常获取用户信息', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDcxLCJleHAiOjE2NDk1ODMxNDV9.6Dk8hJs-F8QmCW7weQntI00-MSuJVYMCgbGTbUiRWgEr4rO_iGyFSm5H0b4Uje7rtgD6CC7M7JwTr1YmvJla_Q"}', method='GET', url='/member/34317071/info', inputParams='null', expected='{
    "code": 0,
    "msg": "OK",
    "data.id": 34317071,
"data.mobile_phone": "13315435717"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserInfo -->
      </class> <!-- com.lemon_yy.testcases.GetUserInfoTest -->
      <class name="com.lemon_yy.testcases.AddLoanTest">
        <test-method status="FAIL" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="131" started-at="2022-04-10T17:27:28 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:28 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=1, interfaceName='addLoan', title='正常加标-借款1000、年化率1、借款周期1个月、竞标天数1天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买测试课程_1",
    "amount":1000.00,
    "loan_rate":1.0,
    "loan_term":1,
    "loan_date_type":1,
    "bidding_days":1
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.amount": 1000.00,
    "data.bidding_days": 1,
    "data.loan_term": 1,
    "data.title": "购买测试课程_1",
    "data.loan_rate": 1.0,
    "data.loan_date_type": 1,
    "data.status": 1
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[接口响应断言失败 expected [1] but found [5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 接口响应断言失败 expected [1] but found [5]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.lemon_yy.base.BaseCase.assertExpected(BaseCase.java:132)
at com.lemon_yy.testcases.AddLoanTest.testAddLoan(AddLoanTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="setup" is-config="true" duration-ms="0" started-at="2022-04-10T17:27:28 CST" finished-at="2022-04-10T17:27:28 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="116" started-at="2022-04-10T17:27:28 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=2, interfaceName='addLoan', title='正常加标-借款1100、年化率24、借款周期36个月、竞标天数10天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买测试课程_2",
    "amount":1100.00,
    "loan_rate":24.0,
    "loan_term":36,
    "loan_date_type":1,
    "bidding_days":10
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.amount": 1100.00,
    "data.bidding_days": 10,
    "data.loan_term": 36,
    "data.title": "购买测试课程_2",
    "data.loan_rate": 24,
    "data.loan_date_type": 1,
    "data.status": 1
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[接口响应断言失败 expected [10] but found [5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 接口响应断言失败 expected [10] but found [5]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.lemon_yy.base.BaseCase.assertExpected(BaseCase.java:132)
at com.lemon_yy.testcases.AddLoanTest.testAddLoan(AddLoanTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="FAIL" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="123" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=3, interfaceName='addLoan', title='正常加标-借款500000、年化率2、借款周期10天、竞标天数2天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买测试课程_3",
    "amount":500000.00,
    "loan_rate":2.0,
    "loan_term":10,
    "loan_date_type":2,
    "bidding_days":2
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.amount": 500000.00,
    "data.bidding_days": 2,
    "data.loan_term": 10,
    "data.title": "购买测试课程_3",
    "data.loan_rate": 2.0,
    "data.loan_date_type": 2,
    "data.status": 1
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[接口响应断言失败 expected [2] but found [5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 接口响应断言失败 expected [2] but found [5]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.lemon_yy.base.BaseCase.assertExpected(BaseCase.java:132)
at com.lemon_yy.testcases.AddLoanTest.testAddLoan(AddLoanTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="162" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=4, interfaceName='addLoan', title='正常加标-借款100000、年化率23、借款周期45天、竞标天数5天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买测试课程_4",
    "amount":100000.00,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":5
}', expected='{
    "code": 0,
    "msg": "OK",
    "data.amount": 100000.00,
    "data.bidding_days": 5,
    "data.loan_term": 45,
    "data.title": "购买测试课程_4",
    "data.loan_rate": 23.0,
    "data.loan_date_type": 2,
    "data.status": 1
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="101" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=5, interfaceName='addLoan', title='借款人id为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "title":"购买测试课程_5",
    "amount":500000.00,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 1,
  "msg": "用户id为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="99" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=6, interfaceName='addLoan', title='借款人id不存在', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":1000000000,
    "title":"购买测试课程_6",
    "amount":500000.00,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "会员不存在"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="100" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=7, interfaceName='addLoan', title='标题为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"",
    "amount":500000.00,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 1,
  "msg": "标题为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="123" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=8, interfaceName='addLoan', title='借款金额为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 1,
  "msg": "借款金额为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="115" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:29 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=9, interfaceName='addLoan', title='借款金额为负数', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":-1000,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款金额范围错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="132" started-at="2022-04-10T17:27:29 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=10, interfaceName='addLoan', title='借款金额为0', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":0.00,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款金额范围错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="116" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=11, interfaceName='addLoan', title='借款金额为小数', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.6,
    "loan_rate":23.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款金额范围错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="138" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=12, interfaceName='addLoan', title='借款金额为非100整除的整数', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1001.00,
    "loan_rate":23,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款金额范围错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="116" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=13, interfaceName='addLoan', title='年利率为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 1,
  "msg": "利率为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="104" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=14, interfaceName='addLoan', title='年利率为0', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":0.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款利率范围错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="144" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=15, interfaceName='addLoan', title='年利率大于24', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":25.0,
    "loan_term":45,
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款利率范围错误"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="100" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=16, interfaceName='addLoan', title='借款期限为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"",
    "loan_date_type":1,
    "bidding_days":9
}', expected='{
  "code": 1,
  "msg": "借款期限为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="100" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=17, interfaceName='addLoan', title='借款期限为0个月', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"0",
    "loan_date_type":1,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="122" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=18, interfaceName='addLoan', title='借款期限为37个月', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"37",
    "loan_date_type":1,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="116" started-at="2022-04-10T17:27:30 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=19, interfaceName='addLoan', title='借款期限为9天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"9",
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="100" started-at="2022-04-10T17:27:31 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=20, interfaceName='addLoan', title='借款期限为46天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"46",
    "loan_date_type":2,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="101" started-at="2022-04-10T17:27:31 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=21, interfaceName='addLoan', title='借款期限类型不输入', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":3,
    "loan_date_type":"",
    "bidding_days":9
}', expected='{
  "code": 1,
  "msg": "借款日期类型为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="100" started-at="2022-04-10T17:27:31 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=22, interfaceName='addLoan', title='借款期限类型输入非1、2', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":3,
    "loan_date_type":3,
    "bidding_days":9
}', expected='{
  "code": 2,
  "msg": "借款类型不存在"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="115" started-at="2022-04-10T17:27:31 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=23, interfaceName='addLoan', title='竞标天数为空', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":3,
    "loan_date_type":1,
    "bidding_days":""
}', expected='{
  "code": 1,
  "msg": "竞标期限为空"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="84" started-at="2022-04-10T17:27:31 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=24, interfaceName='addLoan', title='竞标天数输入超出10天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"3",
    "loan_date_type":"1",
    "bidding_days":"11"
}', expected='{
  "code": 2,
  "msg": "竞标期限为1-10天"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
        <test-method status="PASS" signature="testAddLoan(com.lemon_yy.pojo.CaseInfo)[pri:0, instance:com.lemon_yy.testcases.AddLoanTest@77602954]" name="testAddLoan" duration-ms="116" started-at="2022-04-10T17:27:31 CST" data-provider="getAddLoanDatas" finished-at="2022-04-10T17:27:31 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseInfo{caseId=25, interfaceName='addLoan', title='竞标天数输入0天', requestHeader='{"X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjM0MzE3MDc0LCJleHAiOjE2NDk1ODMxNDZ9.uAKnA6IA4f2YAP_QV0Zyhk8YHYsFBcUUoZpTtC_odflEAmkJlSmUKc5qB-51zpKWwOX6yx0AoPsw0Psvyt5KsQ"}', method='POST', url='/loan/add', inputParams='{
    "member_id":34317074,
    "title":"购买全栈测试课程_5",
    "amount":1000.00,
    "loan_rate":23.0,
    "loan_term":"3",
    "loan_date_type":"1",
    "bidding_days":"0"
}', expected='{
  "code": 2,
  "msg": "竞标期限为1-10天"
}', checkSQL='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLoan -->
      </class> <!-- com.lemon_yy.testcases.AddLoanTest -->
    </test> <!-- test -->
  </suite> <!-- 接口测试 -->
</testng-results>
